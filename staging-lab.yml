version: "2"  

services:
  api:
    ports:
      - 8000:8000
    build:
      context: ./saleor
      dockerfile: ./Dockerfile
      args:
        STATIC_URL: "/static/"
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    depends_on:
      - db
      - redis
      - jaeger
    volumes:
      - ./saleor/saleor/:/app/saleor:Z
      - ./saleor/templates/:/app/templates:Z
      - ./saleor/tests/:/app/tests
      # shared volume between worker and api for media
      - saleor-media:/app/media
    command: gunicorn --bind :8000 --workers 4 --worker-class uvicorn.workers.UvicornWorker saleor.asgi:application
    env_file: common.env
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - STOREFRONT_URL=http://localhost:3000/
      - DASHBOARD_URL=http://localhost:9000/

  # storefront:
  #   build:
  #     context: ./saleor-storefront
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 3000:3000
  #   restart: unless-stopped
  #   volumes:
  #     - ./saleor-storefront/:/app:cached
  #     - /app/node_modules/
  #   command: npm start -- --host 0.0.0.0

  # dashboard:
  #   build:
  #     context: ./saleor-dashboard
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 9000:9000
  #   restart: unless-stopped
  #   volumes:
  #     - ./saleor-dashboard/:/app:cached
  #     - /app/node_modules/
  #   command: npm start -- --host 0.0.0.0

  db:
    image: library/postgres:11.1-alpine
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    volumes:
      - saleor-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=saleor
      - POSTGRES_PASSWORD=saleor

  redis:
    image: library/redis:5.0-alpine
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    volumes:
      - saleor-redis:/data

  worker:
    build:
      context: ./saleor
      dockerfile: ./Dockerfile
      args:
        STATIC_URL: "/static/"
    command: celery -A saleor --app=saleor.celeryconf:app worker --loglevel=info -B
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    env_file: common.env
    depends_on:
      - redis
      - mailhog
    volumes:
      - ./saleor/saleor/:/app/saleor:Z,cached
      - ./saleor/templates/:/app/templates:Z,cached
      # shared volume between worker and api for media
      - saleor-media:/app/media

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    restart: unless-stopped
    networks:
      - saleor-backend-tier

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui. Visit http://localhost:8025/ to check emails
    restart: unless-stopped
    networks:
      - saleor-backend-tier

  meilisearch:
    build:
      context: .
      dockerfile: ./compose/staging-lab/meilisearch/Dockerfile
    image: cp_car_world_staging_lab_meilisearch
    container_name: meilisearch
    # command: ./meilisearch --master-key=masterKey --no-analytics=true
    command: ./meilisearch --no-analytics=true
    volumes:
      - staging_lab_meilisearch:/data.ms
    networks:
      - saleor-backend-tier

  traefik:
    build:
      context:  ./compose/staging-lab/traefik/
      dockerfile: ./Dockerfile
    depends_on:
      - api
      - db
      - meilisearch
    volumes:
      - saleor-traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:7700:7700"
    # Sets the maximum request body to 250Mb
    labels:
      - "traefik.http.middlewares.limit.buffering.maxRequestBodyBytes=250000000"
    networks:
      - saleor-backend-tier

volumes:
  saleor-db:
    driver: local
  saleor-redis:
    driver: local
  saleor-media: {}
  saleor-traefik: {}
  staging_lab_meilisearch: {}

networks:
  saleor-backend-tier:
    driver: bridge